{"posts":[{"title":"Get your free copy of AutoCAD.","text":"Guide to get AutoCAD on your system at no costs using Student Verification. Firstly you need to visit Autodesk educational products website. Click on Get Started You need to Sign up You can use your personal Email ID, it’s not necessary to have your institute’s email ID. Next, you will be greated to setup up your Educational Profile. Now you will be required to enter yout institue’s name and course duration. Once entered, you will be greeted with the following screen. You can press continute or proceed to this link. On this screen you should see multiple Autodesk products, find out AutoCad for your plateform and click on Get Started. Here you will be asked to upload your Institue document to verify if you are a legitimate student. It can be your ID CARD, FEE RECEIPT or CAP ACKNOWLEDGEMENT LETTER, Upload it in pdf file format. After submitting, wait for some time and refresh the webpage. You should be greeted with the following message. Close the popup, navigate to your desired product. Alternatively try this link https://www.autodesk.com/education/edu-software/overview?sorting=featured&amp;filters=individual#card-acdist Hover over the blue INSTALL button and click on DOWNLOAD from the drop down menu. Download should start anytime now. Install it. Do note the download size is almost 2.4GB (2GB+400MB) make sure you have appropriate bandwidth for the same. If you are on data crunch, feel free to reach out to us on our WhatsApp Group This post was brought to you by Anas Khan.","link":"/post/get-your-free-copy-of-autocad/"},{"title":"How to Use TurboC at Home Without Installing Anything","text":"TurboC with no installation, runs totally in the cloud In this article, I am going to show you how to use TurboC in just your broswer without installing anything SetupHere’s how to Setup Turbo C without installing anything on your PC. 1. Go to https://www.onlinegdb.com/ 2. In the top right corner, Select ‘Language‘ as “C (TurboC)“ from the drop down menu. 3. Type Your CodeBy default, onlineGDB loads in some code. You can delete this code and place your own code instead. 4. Run Your CodeRun your code by pressing the green Run button or if you want to be fast, by ‘F9’ on your keyboard. Now You Can Run All Your Code Without Installing A ThingCongratulations! Now you can practice programming in C as much as you want. If you have anything to add here, you can email me on the address given below. Join our WhatsApp Group Posted by Siddharth Bhatia","link":"/post/how-to-use-turboc-at-home-without-installing-anything/"},{"title":"How to get GitHub Student Pack","text":"Availing GitHub Student Developer Pack, using your university email address instantly! GitHub Student Developer Pack is a bundle full of tools and services provided by various tech companies. Prerequisites Access to college/university Email ID College Admission Docs/ Valid ID Card ProcedureFirst, you will be needed to add the institute’s email ID to you github account and verify. To add the email ID, Click here. You will be greated with similar interface, Alll you have to do is add a secondary email ID. However there is a catch ; in order to recieve the verification email you will have to change the domain. You will be having an email address something like this - username@tsecedu.org Change it to this ⤵️ username@tsecol.onmicrosoft.com This step is essential to recieve email from Github. This domain may vary based on your university/college and/or education suite provider. Enter the email address with the changed domain and request verification. You will recieve the verification email on your account. If you don’t have any email client, you can use Outlook for Android and iOS for easier login. Web users may go to http://outlook.com/ and use the same password to login. Click the link and verify the account. Next you’ll have to head over to - Github Student Developer Pack Landing Page. Choose the college/university provided email ID Your institute name would automatically be selected. If not, enter manually. Finally, Answer how to plan to use Github. Answer to this can be short, it hardly matters. Click Continue Now it is the time to upload your proof of academic status. Upload the document and proceed further, You might be prompted with addional steps to continue, so proceed with the same. Wait for sometime, it took me two tries and 5 minutes waiting time. After sucessful submittion, all you have to do is wait for it get approved. For me it was approved instantly and I could redeem any services I like. You will also get Github Pro Badge on your profile. https://education.github.com/globalcampus/student Checkout this link to verify your status. GitHub Copilot is FREE for studentsWhat is GitHub Copilot?GitHub Copilot is an AI pair programmer that suggests lines of code based on the context from comments and code. It is available as an extension for Visual Studio Code, Visual Studio, Neovim, and JetBrains IDE. It is available for everyone at $10 a month. However, it is free for open source developers and students. You can try it out using your existing student developer pack. To sign up, visit github.com/github-copilot/signup/. Sign in with your GitHub account. Follow the simple steps, and you are good to go. Open your IDE. VSCode in this case. Install the extension and sign in using the prompt. Make sure to give access of your GitHub account to the IDE. After doing this, you would be able to use GitHub Copilot. Note: As this tool is helpful, use it fairly. It is always better to write code on your own and be less dependent on such tools. That’s it, you are all set to for the hands-on learning experience. Feel free to reach out to us on our WhatsApp Group This post was brought to you by Anas Khan.","link":"/post/how-to-get-github-student-pack/"},{"title":"Conquer - an attempt at building a useful productivity app","text":"This blog is going to be about a productivity app - its journey, obstacles, technical and product details. the app is called Conquer (web, android) Contents How Conquer came into being How it works Technical details Its gonna be a long one, get some popcorn and hang tight! How Conquer came into beingIt was November 2020, and I was having the time of my life writing automation scripts and a personal website. JEE was a few months away, most of my friends who were JEE aspirants had finished their portions and I realised that I gotta start the portion. But there was a hiccup - I wasn’t able to find a decent tool, with the features, the UI/UX I personally wanted to plan my sprint. So instead of starting with PCM my caveman brain decided to start building. I had used React for a basic CRUD app. So I decided to use it for Conquer as well and till Jan I was able to hack together the tool which I had visualized. I still used to waste a lot of time and I wondered what if Conquer reminds me that I gotta study when I waste time scrolling on Twitter or Insta? I really believed that this is a very cool idea, so I decided to build this no matter what it takes and started learning React Native. After CET, I began working on Conquer’s android app. But when I built all the features which the web app had and began working on Nudger(part of my app which would nudge me on wasting time) I realised that there is no library built in React Native which can help me track apps and I would have to learn native android development using Java. I got into native development, learnt it enough to resume working on Nudger. I still wasn’t able to understand how to track which app is running in the background. I was really gonna give up on it, but then one night I had my eureka moment when I was wondering how the app blockers work. I dug into it, found that they use something called “accessibility service”. It took me a lot of nights and sweat but finally I did pull the app off till Nudger. I participated in a hackathon around the same time and I realised how cool it would have been if I could share the common tasks with my teammates on Conquer. So I built that feature into the android app. How it worksConquer allows users to divide their tasks and goals into five segments: daily, weekly, monthly, yearly and long term. Create and prioritse tasks in all these sections. Had planned to get done with something this week but couldn’t? Conquer lets you postpone tasks in all sections and lets you know how many times you have postponed something. Wanna get a group project done and make sure your teammates are updated with unfinished tasks? With Conquer you can add friends and share tasks with them. This is where the similarities of web and android app end. Nudger is the feature which lets you blacklist apps and websites and notifies you about unfinished tasks, nudges you in Ashneer Grover’s iconic dialog “Bhai kya kar raha hay tu mazak hay kya” and navigates back to your home screen. Technical detailsAs I said before, I have used React to build the web app and Firebase’s services for authentication and database. The web app is hosted on Netlify. The android app is primarily built using React Native. The code which detects which app is running in background and alerts user is written in Java(unfortunately). What the java code does is, triggers an accessibility service whenever window changes, checks if the new app is blacklisted and starts an alarm using Alarm Manager if it is, then pushes a notification and takes user home when the alarm goes off. Thats all for today, hopefully I haven’t bored you, thank you for patiently sticking with me. If you have any questions, thoughts etc. feel free to hit me up on any of my socials (Twitter, Insta, Email). Feel free to reach out to any of us geeks on our WhatsApp Group","link":"/post/conquer-an-attempt-at-building-a-useful-productivity-app/"},{"title":"Getting Started with C Programming","text":"Covers Setup, Basic Structure of Program, Hello World, Explanation of Terms In this article, I am going to show you how to get started with C Programming in TurboC. SetupHere’s how to Setup Turbo C without installing anything on your PC. Go to https://www.onlinegdb.com/ In the top left corner, Select ‘Language’ as “C (TurboC)” from the drop down menu. By default, onlineGDB loads in some code. You can delete this code and place your own code instead. …………………………… Basic Structure of a C Program1234567#include &lt;header file name&gt;#include &lt;header file name&gt;void main(){........................} This is what the structure of a C program looks like. Your First C ProgramLet’s create our first C file. Open OnlineGDB and type in the following code. 12345678#include &lt;stdio.h&gt;#include &lt;conio.h&gt;void main() { printf(\"Hello World!\"); getch();} Now Run the program by clicking the green ‘Run’ button near the top of your screen. Explanation of the ProgramWhat is &lt;stdio.h&gt; ? It stands for ‘Standard Input Output’. stdio.h is a header file which has the necessary information to include the input/output related functions in our program. Functions like printf and scanf are from stdio.h. What is &lt;conio.h&gt; ? It stands for ‘Console Input Output’. conio.h is a header file which is mostly used by MS-DOS compilers like TurboC. Functions like getch() are from conio.h and won’t work unless conio.h is included in the program. What is void main() ? void main() is the entry point for execution in C program. It is where the main code of your program is written. Main function is the heart of C program. Everything inside the main block will be code that is executed. What is printf() ? printf() is a function used to output text to the screen. In our example it will output “Hello World!”. What is getch() ? getch() is a function used to keep the output from the program on the screen for some time until the user presses a key. Without getch(), we wouldn’t be able to see the output of our program in TurboC as after execution the program would close. That Was Your First C ProgramCongratulations! Now you know how to get started with C. If you have anything to add here, you can email me on the address given below. Join our WhatsApp Group Posted by Siddharth Bhatia","link":"/post/getting-started-with-c-programming/"},{"title":"Configure your AutoCAD with these settings.","text":"AutoCAD configurations to get started. In this article, I am providing all the configuration of AutoCAD as suggested by our professors. Units and LimitsThe first thing we need to do is to specify our work area and create a rectangle. UNITS → set Precision = 0; Units = Millimeter LIMITS → 0, 0 ↲ Enter; 600, 400 ↲ Enter RECTANGLE → 0, 0 ↲ Enter; 600, 400 ↲ Enter LayersLayer Properties ManagerWe need to create layers to get different styles of lines. Layer Color Linetype Construction 252 Continuous Center Yellow CENTER2 Dimension Cyan Continuous Hidden 254 HIDDEN2 Hatch Magenta Continuous Dimensions DIMSTYLE → Modify Lines Baseline Spacing: 1 Extend beyond dim lines: 1 Offset from origin: 1 Symbol and Arrows Arrow size: 3 Center marks → Mark: 1 Break size: 1 Jog height factor: 1 Text Vertical: Above Offset from dim line: 1 Text alignment: ISO standard Primary Units Precision: 0 As of now, these are the settings we need to apply before starting our project in AutoCAD. If you have anything to add here, you can email me on the address given below. Join our WhatsApp Group Guided TutorialIf you’re having trouble setting up Units and Limits, check out this video by Manas Patnaik showing you how to set up Units and Limits in AutoCad step-by-step: Posted by Ninad Naik","link":"/post/configure-your-autocad-with-these-settings/"},{"title":"Downloadables C Basic Programs.","text":"Downloadables for 19th May C Crash Course Session for UT-1 CP SEM 2. (I DIV) Here’s the link to download all the programs. Feel free to reach out to us on our WhatsApp Group for queries. This post was brought to you by Anas Khan &amp; Ninad Naik","link":"/post/downloadables-c-basic-programs/"},{"title":"Getting Started with C Programming - Part 2","text":"Covers Setup, Basic Structure of Program, Hello World, Explanation of Terms Hey everyone, in this article I am going to continue the C Programming series in Turbo C. This is the second article in the series. If you haven’t read the first one, you can click the link here : ____. Setup Go to https://www.onlinegdb.com/ In the top left corner, Select ‘Language’ as “C (TurboC)” from the drop down menu. By default, onlineGDB loads in some code. You can delete this code and place your own code instead. …………………………… Now, last time we talked about header files, void main, printf, and getch(). This time lets talk about scanf, format specifiers, \\n, comments, and variables. CommentsComments are some of the most important parts of any program. Don’t underestimate the comment. We write comments so that we can understand our code better. Try commenting your code while you write it. There are two types of Comments in C: Single-line comments and Multi-line Comments. Single-line CommentsSingle-line Comments start with two forward slashes (//). Any text between // and the end of the line is ignored by the compiler (will not be executed). See example of 12// This is a commentprintf(\"Hello World!\"); Multi-line CommentsMulti-line comments start with /* and ends with */. 123456789101112131415161718192021222324/* This is a Multi-line Comment.As you can seeit streches acrossMultiple lines.*/printf(\"Hello World!\");````One thing that I highly reccomend you do is start any program with a COMMENT of what the program is, or the Problem Statement of the program. For eg, if you are told to \"Write a Program to take User's Input and Print it out\" you should put that as the first line of your program as a comment. Like this:```c// Write a Program to take a Number as User's Input and Print it out.#include &lt;stdio.h&gt;#include &lt;conio.h&gt;int inputvoid main() { printf(\"Enter your Number: \"); scanf(\"%d\", &amp;Input); printf(\"Your Number is: %d\", Input); getch();} ScanfScanf is a function, from stdio.h, that is used to take in input from the user. The scanf() function takes two arguments: the format specifier of the variable (%d in the example above) and the reference operator (&amp;myNum), which stores the memory address of the variable. Format SpecifiersFormat Specifiers are an important part of C and usually used with scanf. You might not have been explained what format specifiers for. What is \\n exactly ? The newline character (\\n) is called an escape sequence, and it forces the cursor to change its position to the beginning of the next line on the screen. This results in a new line. Examples of other valid escape sequences are: | Escape Sequence | Description | |—————–|———————————–| | \\t | Creates a horizontal tab | | \\ | Inserts a backslash character () | | \" | Inserts a double quote character | Basic Structure of a C Program1234567#include &lt;header file name&gt;#include &lt;header file name&gt;void main(){........................} This is what the structure of a C program looks like. Your First C ProgramLet’s create our first C file. Open OnlineGDB and type in the following code. 12345678#include &lt;stdio.h&gt;#include &lt;conio.h&gt;void main() { printf(\"Hello World!\"); getch();} Now Run the program by clicking the green ‘Run’ button near the top of your screen. Explanation of the ProgramWhat is &lt;stdio.h&gt; ? It stands for ‘Standard Input Output’. stdio.h is a header file which has the necessary information to include the input/output related functions in our program. Functions like printf and scanf are from stdio.h. What is &lt;conio.h&gt; ? It stands for ‘Console Input Output’. conio.h is a header file which is mostly used by MS-DOS compilers like TurboC. Functions like getch() are from conio.h and won’t work unless conio.h is included in the program. What is void main() ? void main() is the entry point for execution in C program. It is where the main code of your program is written. Main function is the heart of C program. Everything inside the main block will be code that is executed. What is printf() ? printf() is a function used to output text to the screen. In our example it will output “Hello World!”. What is getch() ? getch() is a function used to keep the output from the program on the screen for some time until the user presses a key. Without getch(), we wouldn’t be able to see the output of our program in TurboC as after execution the program would close. That Was Your First C ProgramCongratulations! Now you know how to get started with C. If you have anything to add here, you can email me on the address given below. Join our WhatsApp Group Posted by Siddharth Bhatia","link":"/post/getting-started-with-c-programming-part-2/"},{"title":"Getting started with web development","text":"A comprehensive roadmap of getting started with web development. Something to note: You can’t learn to code by just watching tutorials or reading articles; you have to get your hands dirty by writing code, facing errors and building real world projects. In this article I will recommend projects you can build after completing each step. First things first: HTML and CSSNow thats something most of us already know. For those who don’t, HTML decides the structure of websites and CSS is used to control the styling(fonts, colors, animations etc). Learning Resource Project recommendation: a well formatted website listing all suits of Tony Stark. Lets start coding now Javascript (yeah its a real programming language) should be your next step. Javascript decides how your website will behave, what happens on clicking buttons, what data gets sent to the server etc. If javascript is your first programming language, it can be overwhelming. Loops, conditionals, arrays, objects, DOM manipulation, local storage, asynchronous javascript….wohh!!! This is the point where a lot of people start feeling that they are too dumb and coding isn’t for them. But don’t give up yet, you are smarter than you think. Resources: This is too long, just skim through it. This one is for asynchronous javascript Project recommendation: a todo list website which utilizes local storage Frontend: The wicked world of Javascript frameworksYou can create perfectly functional websites with just HTML, CSS and JS. But as your web app grows, writing and maintaining vanilla js code becomes really tough. This is where javascript frameworks come in, they make a developer’s life easy. The thing with javascript frameworks is: there a TOO MANY OF THEM. So which one should you choose? Angular is slightly tough to get started with, Svelte and Vue are newer frameworks that are easier to work with and performant than Angular and React but I would say go with React( actually its a library not a framework): its powerful, easy to learn, has a very large community, lots of tutorials plus if you know React you can easily get into the world of android and ios development by learning something called React Native: a framework based on React. The performance trade-off shouldn’t matter to a beginner. At this point you can also consider using a service like Firebase, it provides you a database which you can connect to your app and other necessary features like user authentication(sign in with gmail, google etc), hosting. Resources: using react with firebase Project recommendation: Extend the todo list app you created, add google authentication, store tasks in firestore. Backend and Database: flex about being a web developer after thisBackend refers to the code which runs on the server. This code handles requests which our users make from the frontend and makes changes to the database. There are a lot of choices in backend frameworks as well: Express, Deno, Django, Flask, Ruby on Rails, Gin, Beego etc. Choose Django(its really powerful but the project structure is extremely intimidating) or Flask if Python is your love. Gin and Beego are go frameworks. If javascript is something you are comfortable with then go with Express. My personal opinion: go with Express. It has a large community and is a very popular option with the frontend framework I recommended, React. Databases are primarily of two types: SQL and NO-SQL. For a start going with MongoDB is not a bad idea, its a popular NoSQL choice. Resources: MERN Tutorial Project recommendation: Twitter clone This is the start and not the endThe world of web development is ever evolving. So, your journey doesn’t end but actually starts after following all the above steps. Build tons of projects. There are so many things you can learn after this. Learn typescript, its a statically typed (avoid bugs in production by making your life hell while writing code) replacement of javascript. Try to get deeper into the framework you have worked with, also don’t shy away from exploring other frameworks which suit your project. Thats all for today, thank you for patiently reading till the end. If you have anything to add or any questions or suggestions, feel free to hit me up on my socials(twitter, insta). Crafted and posted by Pranil.","link":"/post/getting-started-with-web-development/"},{"title":"Dive Into Competitive Programming","text":"Key Takeaways from TSEC CodeCell’s Dive Into Code Seminar by Saket Thota &amp; Tushar Nankani Note: Last Year’s Virtual Seminar By CodeCell What is CP?Competitive Programming. It’s more of a mind sport than a coding challenge. CP is about focusin on time, efficiency and accuracy. Author’s note: Please read the entire post and visit the approprate links. A great care has been taken into writing this and formulating the resources. If you come across some new term, please do not assume and learn it’s meaning. Why do CP?It helps one: with developing Problem Solving skills. to be a quick thinker. to think about efficency in terms of time and memory limits. And also, it is a part of recruitment/shortlisting for some companies for full time job roles. If we take a broader look, and zoom out a little from this scenario — it emulates real time problem solving. Reading the problem and understanding it. Understanding the requirements. Thinking about an approach. (Design) Thinking about efficency. (Feasability) Coding out the problem. (Development) Result of the problem. (Speed, Time, Testing) How to get started with CP?Level 1: Learn a language.Which programming language to choose from?Fact: Language doesn’t matter. You can start with any. Opinion: If you’re a beginner, you can start with C++. Java syntax can be overwhelming. Python is slower at runtime and could give TLEs, while other languages could give Accepted with the same approach. Another Fact: There are certain performance benefits of using C++, however there are several people such as Petr (Java) and pajanegod (Python) who have reached 2400+ on Codeforces without using C++. How do I get started with learning a language?Any place which covers the basics right works. Opinion: Focus more on doing it than sticking to books or tutorials. A great place to evaluate your skills can be Hackerrank. Hackerrank &gt; Prepare By Topics &gt; Choose A Language. Then, move to Problem Solving. Level 2: Practice.Now, could be the time to take a shot at platforms like Codeforces, Codechef, etc. Getting Started on Codechef, Codeforces Problems on Codechef , Codeforces . (difficulty increasing progressively) Another tool to help aid this gradual difficulty level is A2OJ ladders. Level 3: Give ContestWhat are contests?Solving a few problem statements under given amount of time. They are a great way to upskill yourself and maintain good speed. Give contests with your peer group (more at the end). After giving a contest, compare your code with with someone with good rating and someone who’s code you can understand. Discuss. Some contests suggestions.Strategies : Solving effectively Taking part in contest Upsolving* Editorial Reading. Upsolving: Solve the sums you couldn’t do. Look at others code their way of implementation. While reading editorial. Don’t read the entire code. Read one line try to think what the implementation could be, second line…and so on. If you don’t understand, then see the whole code. But try to implement and write code on your own. Mistakes To Avoid. Switching between problems. Now, if you’re coding your subconscious mind keeps thinking about the previous question. It is recommended not switch in between problems until and unless you’ve exhausted your thoughts. Being in your comfort zone. One thing, don’t solve a same rating problem continuously. There will be a point where you’ll realize that you’re comfortable with these level sums. Increase the difficulty gradually. For beginners please don’t wait to solve complete tutorials. Chances are you’ll forget overtime. Practice. Note: Writing the code is the easiest thing to do. Thinking about how should you proceed and finding the corner case is something which will make you a problem solver. Then comes implementation. Read the problem statement properly. Don’t use the hint until it’s too necessary. Contests to look if you are beginner : AtCoder’s, ABC every Saturday 5 PM IST Codechef, STARTER every Wednesday 8 PM IST Some Prestigious Contests: ICPC (Internation Collegiate Programming Contest) Google Kickstart, Hashcode and CodeJam Facebook Hacker Cup Codechef Snackdown Looking for peers?If you are beginner and looking for peers or post contest discussions, you are free to join. WhatsApp Group. Authored by Sarah Khan, co-authored by Anas Khan.","link":"/post/dive-into-competitive-programming/"},{"title":"How To Create a Smartphone Brand Ft. Carl Pei","text":"Carl Pei has made a lot of phones. As the founder and CEO of NOTHING, Carl Pei has spent the last decade exploring innovative ways to compete in the tech industry alongside Apple and Samsung. With Carl launching CMF, a sub-brand of the “NOTHING” brand, it is now the 4th brand he has created: OnePlus OnePlus Nord NOTHING CMF by NOTHING And all of them are quite successful. So, here’s a breakdown of how to create a smartphone brand: Step 1: Instead of Announcing a Product, Announce a Problem.Carl starts by addressing a problem that the consumers face because of the unfair business behavior of the Big Dog Companies. With OnePlus, it was video campaigns showing how their current phone sucks and how OnePlus is going to change it. There was even a #SmashThePast campaign where if you smash your current phone, you could have a chance of getting what OnePlus has to offer. This campaign was launched months before the actual launch of the phone. With OnePlus Nord there was a documentary series released in 4-5 parts, featuring Behind The Scenes footage of how OnePlus forgot their ‘Flagship killer’ phones and the community and how they decided to be back with a new series– the Nord Series. In my opinion, I consider it to be a different brand because it was so different from the OnePlus original marketing. It had different social media pages. The box was different, the design language of the phone was quite different, and well the phone was launched at an affordable rate. It never quite had those out-of-box specs, but it had upper midrange specs. For NOTHING, it was a 20-minute video of Carl just pointing to every phone manufacturing company out there and claiming that they have killed the innovation. How phone brands have stopped innovation, and how NOTHING was created to “Make tech fun again”. The whole video did not have a single photo of the phone they were planning to develop, but it was enough to create the hype and make sure that this campaign slinked on its own. Step 2: Create a Myth.With the problems of the smartphone industry being known to people, Carl creates a myth– a core and abstract idea on how he plans the company to be successful by being the solution to the problem. It is different for every brand he has released. With OnePlus, it was the “Flagship Killer”. With the Nord Series, it was “Value For Money”. And with NOTHING, it was “A Phone That’s Fun Again”. These ‘myths’ are released months before the actual launch of a product, with the aim being to focus the consumer’s attention on the core idea of ‘What the problem is’, ‘What the solution is’, and how our company fits perfectly in between. Carl even goes the distance by allowing users to invest in his company. Carl invites selected people from the community to the headquarters where the development of the product and communities’ ideas are taken into consideration, thus giving the confidence that this is the company that has enough power and ideas to defeat the evil players in the industry. Step 3: Highlight.With weeks remaining before the launch, Carl uses his masterpiece stroke: creating ‘the Hype’ and maintaining it by allowing a selected few individuals to catch glimpses of the product before its launch. During the Nord series launch, a video podcast was created with Youtuber MKBHD where Carl explained the whole story of how Nord was necessary to stick to their roots as a company, and he even showcased some of the non-finalized prototypes of the phones on screen too. With the actual design revealed, the video was titled ‘How Much Do Smartphones Actually Cost?’, thus making sure it stuck to the topic of just how much they are trying to improve the experience at the bare minimum cost. This then continued with releasing every detail of the phone separately at certain fixed times before the launch. This approach is implemented with the specific goal of keeping people engaged with the phone and its concept. Instead of revealing all the details at once and risking judgment of the entire package, the strategy is to gradually unveil the product’s key features in alignment with the carefully constructed narrative. For OnePlus, this entailed the release of specifications prior to the official launch, ensuring alignment with the “Flagship Killer” myth. With the Nord Series, the approach involved releasing a documentary in parts on YouTube. Meanwhile for NOTHING, Carl capitalized on the FOMO(Fear of missing out) factor by restricting phone purchases to those who possess a pre-order pass, available only to private community members. Finally, in the case of CMF by NOTHING, they recently shared live images of the product along with its specifications, sometimes incorporating special giveaways on select YouTuber channels. The Launch: Following weeks of mounting anticipation, the company ultimately introduces a phone that, in essence, takes no risks, unlike Samsung’s foldables. It’s a standard phone with design tweaks and a few software enhancements, but it stands out due to its aggressive pricing. This approach is akin to what OnePlus and the Nord Series have adopted. Instead of taking risks, they opt for a safer route by building up excitement around the product. Now, consider what would happen if they skipped the first three steps in this process. In such a scenario, the product would be perceived as just another ordinary phone, and people wouldn’t have shown as much interest. In essence, this approach ensures that the product doesn’t come across as merely a generic offering. To illustrate, if a company like Samsung or Xiaomi were to launch CNF chargers or a smartwatch without following a similar build-up strategy, it would likely be perceived as just another charger or watch with minor design modifications. Step 4: Shape the Conversation.Following the product launch, Carl and his company are committed to sustaining the hype and steering conversations in a way that benefits the company. This includes actions such as retweeting specific tweets to amplify their presence. Additionally, they make it a point to review, appreciate, and scrutinize their direct competitors like the Apple iPhone or even Carl’s former company’s the OnePlus 11. This strategic move ensures that they remain a prominent topic in industry discussions. Carl’s company actively participates in discussions, even engaging with famous YouTubers’ reviews of their phone and providing their own insights. These actions help maintain the company’s visibility and influence in the market. These are the four marketing strategies that Carl employs to launch a product and establish his own company. While this method has proven effective, it comes with some ironies. For instance, during the NOTHING launch, Carl claimed there was no innovation in tech, despite his significant involvement in the smartphone tech industry for the past decade. Additionally, during the Nord series launch, he asserted that “Flagship Killer” phones no longer exist, yet his own company released the OnePlus 8 series, priced at 50,000 Rupees. This is my perspective, and I hope you found this article interesting. Please take a moment to read it and consider sharing it with your groups. Your suggestions are also welcome. Written by Chaitanya Deshpande. Edited by Siddharth Bhatia.","link":"/post/how-to-create-a-smartphone-brand-ft-carl-pei/"},{"title":"Best Deals - Flipkart BBD, Prime Day 2023","text":"By Chaitanya Deshpande With the biggest sale of the year starting from 8th October, 2023, here are the best deals on tech gadgets across both Flipkart and Amazon. Disclaimer: None of the products have been personally reviewed or used by me. I have seen various deals available and have checked their reviews online and on YouTube, based on which the following conclusion have been reached. We will review products across four price categories, and I will recommend at least three gadgets for you to choose from, out of which you can buy the one that suits your needs perfectly. Starting off with: 10-20K segment: Moto G84: Processor: MediaTek Dimensity 7020 with virtual RAM Display: 6.5-inch FHD+ IPS LCD with 120Hz refresh rate Camera: 50MP main + 8MP ultra-wide rear, 8MP selfie camera Battery: 6000mAh with 33W fast charging, reverse wired charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: Android 13 with Motorola’s customizations Notable Features: IP53 rating, Corning Gorilla Glass protection, stereo speakers with Dolby Atmos, Moto Connect⁴ Price:20k, Discounted Price 17k Moto G54: Processor: MediaTek Dimensity 7020 with virtual RAM Display: 6.4-inch FHD+ IPS LCD with 120Hz refresh rate Camera: 50MP main + 8MP ultra-wide + 2MP macro rear, 16MP selfie camera Battery: 6000mAh with 18W fast charging RAM/Storage: [Storage and RAM information not provided] OS: Android 13 with Motorola’s customizations Notable Features: IP53 rating, Corning Gorilla Glass protection, stereo speakers with Dolby Atmos, Moto Connect Price:16k, Discounted Price 14k 20-30K segment: Poco F5: Processor: Snapdragon 8 Gen 1 Display: 6.67-inch FHD+ AMOLED with 120Hz refresh rate Camera: 64MP quad rear camera, 16MP selfie camera Battery: 5000mAh with 67W fast charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: MIUI 14 based on Android 13 Notable Features: Stereo speakers, NFC, IR blaster Price: Rs. 24,999 Discounted Price 21K Moto Edge 40: Processor: Snapdragon 7+ Gen 2 Display: 6.67-inch FHD+ OLED with 120Hz refresh rate Camera: 50MP triple rear camera with OIS, 16MP selfie camera Battery: 4400mAh with 68W fast charging, 15W wireless charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: Android 13 with Motorola’s customizations Notable Features: IP68 rating, vegan leather option, stereo speakers with Dolby Atmos, NFC, IR remote² Price: 30K ,Discounted Price 24K OnePlus Nord CE 3: Price: Rs. 24,999 for 8GB RAM + 128GB storage, Rs. 28,999 for 12GB RAM + 256GB storage Display: 6.7-inch Fluid AMOLED, 1080x2412 pixels, 120Hz refresh rate, HDR10+ Processor: Qualcomm Snapdragon 782G (6 nm), octa-core (1x2.7 GHz Cortex-A78 &amp; 3x2.4 GHz Cortex-A78 &amp; 4x1.8 GHz Cortex-A55), Adreno 642L GPU Camera: Rear - 50 MP (wide) + 8 MP (ultrawide) + 2 MP (macro), Front - 16 MP (wide) Battery: 5000 mAh, 80W Super VOOC charging, USB Type-C port OS: Android 13, OxygenOS 13.1 Other features: Dual SIM, Wi-Fi 6, Bluetooth 5.2, NFC, Infrared port, Fingerprint sensor (under display), microSDXC slot (hybrid) Price: 27K, Discounted Price 25k Nothing Phone 1: Price: Rs. 23,999 for 8GB RAM + 128GB storage, Rs. 29,999 for 8GB RAM + 256GB storage, Rs. 30,999 for 12GB RAM + 256GB storage Display: 6.55-inch OLED, 1080x2400 pixels, 120Hz refresh rate, HDR10+, Gorilla Glass 5 Processor: Qualcomm Snapdragon 778G+ (6 nm), octa-core (1x2.5 GHz Cortex-A78 &amp; 3x2.4 GHz Cortex-A78 &amp; 4x1.9 GHz Cortex-A55), Adreno 642L GPU Camera: Rear - Dual -50 MP (wide) + 50 MP (ultrawide), Front - 16 MP (wide) Battery: Li-Ion 4500 mAh, non-removable, 33W wired charging, 15W wireless charging, 5W reverse wireless charging OS: Android 12, upgradable to Android 13, Nothing OS 2.0 Price: 27k, Discounted Price 24K Samsung Galaxy S21 FE 2023 (Snapdragon): Price: Rs. 49,900 for 8GB RAM + 256GB storage Display: 6.4-inch FHD+ Dynamic AMOLED 2X, 1080x2400 pixels, 120Hz refresh rate, HDR10+, Gorilla Glass 5 Processor: Qualcomm Snapdragon 8+Gen1 (5 nm), octa-core (1x2.9 GHz Cortex-X2 &amp; 3x2.6 GHz Cortex-A78 &amp; 4x2.0 GHz Cortex-A55), Adreno 730 GPU Camera: Rear - 12 MP (wide) + 12 MP (ultrawide) + 8 MP (telephoto), Front - 32 MP (wide) Battery: 4500 mAh, Fast charging, USB Type-C port OS: Android 13, One UI 13.1 Price: 50k, Discounted Price 27K 30-40K segment: Nothing Phone (2): Processor: Snapdragon 8+ Gen 1 Display: 6.7-inch FHD+ AMOLED with 120Hz refresh rate Camera: 64MP main + 13MP ultra-wide rear, 16MP selfie camera Battery: 4550mAh with 65W fast charging, 15W wireless charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: Android 13 with Nothing OS 2.0 Price:45K, Discounted Price 37K Pixel 7: Processor: Tensor G2 Display: 6.4-inch FHD+ OLED with 90Hz refresh rate Camera: 50MP main + 12MP ultra-wide + 48MP telephoto rear, 8MP selfie camera Battery: 4614mAh with 30W fast charging, wireless charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: Android 13 with Pixel-exclusive features Price:50k, Discounted Price 36k Pixel 7a: Processor: Tensor G2 Display: 6.2-inch FHD+ OLED with 60Hz refresh rate Camera: 12.2MP main + 16MP ultra-wide rear, 8MP selfie camera Battery: 4680mAh with 18W fast charging RAM/Storage: Up to 8GB RAM, 128GB storage OS: Android 13 with Pixel-exclusive features Price:44k, Discounted Price 33kk OnePlus 11R: Processor: Snapdragon 778G Display: 6.55-inch FHD+ AMOLED with 120Hz refresh rate Camera: 50MP main + 16MP ultra-wide + 2MP macro rear, 16MP selfie Battery: 5000mAh with 65W fast charging, wireless charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: OxygenOS 14 based on Android 13 Price:40K, Discounted Price 35K Over 40K segment: OnePlus 11: Processor: Snapdragon 8 Gen 1 Display: 6.7-inch QHD+ AMOLED with 120Hz refresh rate Camera: 48MP main + 50MP ultra-wide + 8MP telephoto + monochrome rear, 16MP selfie camera Battery: 4500mAh with 65W fast charging, wireless charging RAM/Storage: Up to 12GB RAM, 256GB storage OS: OxygenOS 14 based on Android 13 Price:57k, Discounted Price 50k Samsung Galaxy S22 Display: 6.1-inch LTPO OLED, 1080x2340 pixels, 120Hz refresh rate, HDR10+, Gorilla Glass Processor: Qualcomm Snapdragon 8+ Gen 1 (4 nm), octa-core (1x3.0 GHz Cortex-X2 &amp; 3x2.5 GHz Cortex-A710 &amp; 4x1.80 GHz Cortex-A510), Adreno 730 GPU Memory: 8GB RAM + 128GB storage Camera: Rear - 12 MP (wide) + 64 MP (telephoto) + 12 MP (ultrawide), Front - 10 MP (wide) Battery: Li-Ion 4000 mAh, non-removable,25W wired charging,15W wireless charging,4.5W reverse wireless charging OS: Android 13, One UI 13.1 Price:55k, Discounted price 40k Samsung Galaxy S23 Display: 6.8-inch Dynamic AMOLED 2X, 1440x3200 pixels, 120Hz refresh rate, HDR10+, Gorilla Glass Processor: Exynos 2200 (4 nm) - Europe Qualcomm SM8450 Snapdragon 8 Gen 1 (4 nm) - ROW Octa-core (1x2.8 GHz Cortex-X2 &amp; 3x2.50 GHz Cortex-A710 &amp; 4x1.8 GHz Cortex-A510) - Europe Octa-core (1x3.00 GHz Cortex-X2 &amp; 3x2.50 GHz Cortex-A710 &amp; 4x1.80 GHz Cortex-A510) - ROW Mali-G79 MP20 GPU - Europe Adreno 730 GPU - ROW Memory: 12GB RAM + 256GB storage Camera: Rear - Quad -108 MP (wide) +12 MP (periscope telephoto) +12 MP (telephoto) +12 MP (ultrawide), Front -40 MP (wide) Battery: Li-Ion5000 mAh, non-removable,45W wired charging,15W wireless charging,4.5W reverse wireless charging OS: Android13, One UI13.1 Price:75K, Discounted price 63K iPhone 13 Display: 6.1-inch Super Retina XDR OLED, 1170x2532 pixels, HDR10, Dolby Vision, 800 nits (HBM), 1200 nits (peak), Ceramic Shield glass Processor: Apple A15 Bionic (5 nm), hexa-core (2x3.23 GHz Avalanche + 4x1.82 GHz Blizzard), Apple GPU (4-core graphics) Memory: 6GB RAM +128GB/256GB/512GB storage Camera: Rear - Dual -12 MP (wide) +12 MP (telephoto), Front -12 MP (wide) Battery: Li-Ion2815 mAh, non-removable,20W wired charging,15W wireless charging, MagSafe wireless charging Price:52K, Discounted price 46K","link":"/post/best-deals-flipkart-bbd-prime-day-2023/"},{"title":"Bookmarklets","text":"Bookmarklets are snippets of JavaScript that are executed when you click on a bookmark. You can “install” them by dragging them to your bookmark bar, and whenever you want to run one, you simply click on it. I’ve amassed a small collection of them. The purpose of this article is to share these bookmarklets with you 😄. Autoclicker - Automatically clicks the selected element. Snake in 849 bytes - A snake codegolf (look it up) in just 849 bytes. More info on the creators website. Retro - Makes your screen look like an old monitor. Blur - Adds a blur filter to the page. Grayscale - Applies a grayscale filter to the page. Random Orientations - A bookmarklet that makes small adjustments to the orientation of various elements on the page, giving it a nice 'broken' look. Rotate Page Booby Trap - This script does nothing until someone presses a key on keyboard or moves the mouse, then it rotates the page 180°. After you run the script there is a 5 second pause before the trap is activated. I Like Frogs - This script replaces any text that the victim enters with the words 'I like frogs'. More info at their website. Toggle CSS - Toggle the CSS on a website off and on. jQuerify - A utility script that checks if jQuery is on a page, and if it isn't, adds jQuery. Bookmarklets From my old collection (which I use often)","link":"/post/bookmarklets/"},{"title":"Everything About BGI","text":"This is a short history of BGI (Borland Graphics Interface) which was once an extremely popular and easy way to implement presentation graphics in C programs. It is still used today to teach Computer Graphics at universities in India. #include &lt;graphics.h This living document is still being worked on. Quick ExplanationBGI: Borland Graphics InterfaceWinBGI: Borland Graphics Interface for WindowsWinBGIm: Borland Graphics Interface for Windows with mouseWinBGIm-64: Borland Graphics Interface for Windows with mouse supporting 64-bit computers History1987 - 1993 : Borland invents BGI1995 (probably because he made this on Windows 95) : Konstantin Knizhnik creates WinBGI1998 (or earlier) - 2016 : Michael Main creates WinBGIm2021 - Jan 2022 : Shakil Ahmed (Bangladesh) creates WinBGIm-64 Q and AQ: Why did the CS department at the University of Colorado create WinBGIm?A: As far as I can tell, they did it because the computers around them had switched to Windows and they still wanted students to be able to learn and practice computer graphics programs written for BGI. So Michael Main and others worked on WinBGIm. Q: What is CSCI 1300?A: CSCI 1300, sometimes known as CS1300, is the university of Colorado Boulder’s Introduction to Computing Course.WinBGIm was included in the Software Package for CS1300. It seems to have been used in the Labs sessions there. There’s even a Lab exercise for it: https://home.cs.colorado.edu/~main/bgi/cs1300/lab/cs1300-3.html Q: What is the history of BGIA: It’s a beautiful story about open source software, and how it can be picked up and worked on by anyone in the world. Konstantin Khiznik created a way to run Borland Graphics programs on Windows. Michael Main quickly forked the work and made WinBGIm which he worked on for several years, with collaborators at University of Colorado Boulder. Most recently, Sakhil Ahmed at Shahjalal University of Science and Technology in Q: How long was Michael Main working on WinBGIm?A: Michael Main was working on WinBGIm from October 17, 1998 (WinBGIm version 2.2) to November, 2005 (WinBGIm version 6.0). But there are updates to the source code as recently as December 2016. Q: Where is the source code for WinBGIm?A: Source Code: https://home.cs.colorado.edu/~main/cs1300/bgi Q: What’s my souce?A: See this. NoteDon’t get confused between there two: The true source code of WinBGIm (updated 2016)https://home.cs.colorado.edu/~main/bgi/source/ The mirrored source code in CS1300 (updated 2014)https://home.cs.colorado.edu/~main/cs1300/bgi/ People Involved Konstantin Knizhnik (The original developer of WinBGI) Michael Main (AFAIK the primary developer of WinBGIm) Sakhil Ahmed (The developer of WinBGIm-64) Versions WinBGI shareware developed by Konstantin Knizhnik at ISPRAS(Institute of System Programming Russian Academy of Sciences). README is here: https://home.cs.colorado.edu/~main/bgi/doc/knizhnik.txt WinBGIm (Windows BGI - with mouse) version 6.0 was maintained and distributed by Michael Main at the University of Colorado http://www.cs.colorado.edu/~main/cs1300/doc/bgi/bgi.html WinBGIm for MinGW a.k.a for the GCC Compiler by Al Stevens made some extremely trivial changes to WinBGIm. Created: November 2005. Last Modified: July 2006. Documentation for WinBGImis hosted here: https://home.cs.colorado.edu/~main/bgi/doc/Functions without the ‘Win’ tag are originally from BGI. Functions with the ‘Win’ tag are unique to WinBGIm. Konstantinhttp://www.garret.ru/lang.html (scroll down to ‘BGI for Windows’)My e-mail address:knizhnik@cecmow.enet.dec.com “BGI emulationPtoC now provides emulation libraries of Borland Graphics Interface (BGI) for X-Windows and Windows-95/NT are included in this distribution (BGI emulators can be also used without converter for C programs using BGI). I found source code of BGI emulator for X-Windows in Internet, so I only have to do some changes and fix few bugs. Unfortunately this emulation library is not fully completed and tested, also not all BGI functionality is supported. And BGI emulator for MS-Windows I created myself (in Internet I found only commercial products). I called this library WinBGI.WinBGI strictly emulates most of BGI functions (except using of non-standard drivers). Also may be mapping of fonts is not correct. But as far as sources are also available, you can easily customize them for your application. Unfortunately direct work with palette colors (setpalette, setbkcolor, write and putimage modes other than COPYPUT) is supported only for 256-colors Windows mode. Also I have used this library for only few programs (bgidemo is certainly the most complex one) so I can’t guaranty that all functions always work properly. I am also sorry for the lack of parameter checking in WinBGI functions.“ from http://www.garret.ru/ptoc/Readme.htm#winbgi GitHub for original WinBGI: https://github.com/knizhnik/ptoc/tree/master/WinBGI FUN FACT: Years later, he actually got a job at Borland Co, Moscow branch! He was employed there from 2003-2006. WinBGIm (Windows Borland Graphics Interface and Mouse) at University Of Colorado Boulder(1998/2004 - 2016)Developed at the Computer Science department of the University of Colorado Boulder. CS1300 BGI Graphics Exercises - https://home.cs.colorado.edu/~main/bgi/cs1300/lab/cs1300-3.htmlNote: WinBGIm contains its own versions of getch, delay, and kbhit. You do not need to include conio.h to use these functions.Mouse Stuff Explanation: https://home.cs.colorado.edu/~main/cs1300/doc/bgi/bgi.htmlUse with Visual Studio: https://home.cs.colorado.edu/~main/bgi/visual/ Codecutter (2005 - 2011)https://winbgim.codecutter.org/https://winbgim.codecutter.org/V6\\_0/doc/initwindow.htmlThe site was last updated in 2011.AFAIK, Al Stevens is the developer of all the projects at codecutter.org. This includes CodeBlocks Edu, Koolplot, Quincy C/C++ IDE, MakeGen(used to generate makefiles compatible with the free Borland C/C++ compiler), Al Steven’s Personal Website: http://www.alstevens.com/bio.html Actually Modern BGI Projects (2023) https://sdl-bgi.sourceforge.io/ Description: SDLbgi can be used to port old programs written for Turbo/Borland C to modern systems. And, of course, to write new graphics programs with minimal effort: BGI, once extremely popular, was probably the simplest way to implement presentation graphics in C programs. The same ease of programming can be obtained on modern systems. Programming fractals, cellular automata, geometry, physics models etc. is a breeze with SDLbgi. Alternatives to WinBGIm https://openbgi.sourceforge.net/ https://sourceforge.net/projects/openbgi/ https://gomphics.sourceforge.net/ https://sourceforge.net/projects/gomphics/files/ https://sourceforge.net/projects/graphicsmsvs/ Additional LinksJordan Hargrave’s SVGA BGI drivers: https://github.com/jharg93/SvgaBGICodeBlocks Edu Portable includes WinBGIm. Recommended only if all other methods to run BGI programs on Windows fails: https://codeblocks.codecutter.org/Quincy C/C++ IDE includes WinBGIm: https://quincy.codecutter.org/ More BGI libraries here: https://home.cs.colorado.edu/~main/bgi/source/with the most recent update as early as 2016! Sitemap of Uni Colorado Michael Main:https://www.xml-sitemaps.com/details-home.cs.colorado.edu-9234475b5.html https://en.wikipedia.org/wiki/Borland*Graphics*Interface Moscow State Industrial University","link":"/post/everything-about-bgi/"}],"tags":[],"categories":[],"pages":[{"title":"About","text":"👋 Good day, everyone! GeekSpace is pleased to welcome you. This community is for people who are passionate about technology as well as those who want to learn about the newest developments in the field 👨🏻‍💻 We usually talk about technology, exchange memes, and provide feedback on tech keynotes - everything worth talking about is shared here. The nicest thing about the individuals here is their extensive background knowledge 🙇🏻‍♂️, whether it’s setting up Linux 🖥️ or flash AOSP Custom Roms 📱 or even assisting you in buying new laptop 💻. Everything to do with technology is covered here🦾 You’re encouraged to share your questions, and everyone here is incredibly helpful; someone will undoubtedly assist you 🤗 Oh, and this isn’t your coding group—though we do talk about it— but it’s more of a hangout place for techies. 👾 Contact usFree free to connect with us on WhatsApp : Invite","link":"/about/index.html"}]}